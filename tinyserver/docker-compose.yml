version: '3.7'
services:
#  db:
#    container_name: db
#    image: postgres:15.1
#    restart: always
#    environment:
#      POSTGRES_USER: ${DB_USER}
#      POSTGRES_PASSWORD: ${DB_PASS}
#      POSTGRES_DB: ${DB_NAME}
#      TZ: ${TZ}
#    volumes:
#      - volume-db:/var/lib/postgresql/data
#  db-gui:
#    image: dpage/pgadmin4:6.17
#    container_name: db-gui
#    restart: always
#    volumes:
#      - volume-pgadmin:/var/lib/pgadmin
#      PGADMIN_DEFAULT_EMAIL: root@example.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    hostname: db-gui
#    ports:
#      - "8081:80"
#    depends_on:
#      - db
  db:
    image: mysql:8
    container_name: db
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASS}
      - MYSQL_ROOT_PASSWORD=${L_DB_ROOT_PASS}
      - TZ=${TZ}
    volumes:
      - volume-mysql:/var/lib/mysql
      - ./dev/db/mysql/conf:/etc/mysql/conf.d
  db-gui:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin:5.2.0
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOSTS=db
      - PMA_USER=${DB_USER}
      - PMA_PASSWORD=${DB_PASS}
    ports:
      - "8081:80"
    volumes:
      - ./dev/db-gui/phpmyadmin/sessions:/sessions
  db-prisma-proxy:
    depends_on:
      - db
    build:
      context: ./dev/db-prisma-proxy
      dockerfile: Dockerfile
    image: e2eencloud/pdpa
    working_dir: /app
    environment:
      DATABASE_URL: mysql://${DB_USER}:${DB_PASS}@db:3306/${DB_NAME}?schema=public
      DATA_PROXY_API_KEY: HOGE_HOGE
      PORT: "3000"
    volumes:
      - ./prisma/:/app/prisma-original/:ro
    user: "node:node"
  db-prisma-proxy-https:
    depends_on:
      - db-prisma-proxy
    image: steveltn/https-portal:1
    environment:
      STAGE: local
      DOMAINS: 'db-prisma-proxy-https -> http://db-prisma-proxy:3000'
    volumes:
      - ./dev/db-prisma-proxy-https/ssl-certs:/var/lib/https-portal
  mailer:
    container_name: mailer
    image:  maildev/maildev:2.0.5
    volumes:
      - volume-mailer:/home/maildev
    restart: always
    environment:
      - TZ=${TZ}
      - MAILDEV_WEB_PORT=1080
      - MAILDEV_SMTP_PORT=1025
      - MAILDEV_MAIL_DIRECTORY=/home/maildev
    ports:
      - "8082:1080"
      - "8025:1025"
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
  minio:
    image: 'minio/minio'
    container_name: minio
    environment:
      - MINIO_ROOT_USER=${L_MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${L_MINIO_ROOT_PASSWORD}
      - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
      - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
    command: "server /data --console-address :9001"
    volumes:
      - volume-minio:/data
    ports:
      - "${L_MINIO_PORT}:9000"
      - "8083:9001"
  createbuckets:
    depends_on:
      - minio
    image: minio/mc
    container_name: minio-createbucketd
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 ${L_MINIO_ROOT_USER} ${L_MINIO_ROOT_PASSWORD}) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc alias set myminio http://minio:9000 user password;
      /usr/bin/mc mb myminio/${AWS_BUCKET} --region=${AWS_DEFAULT_REGION};
      exit 0;
      "
  app:
    build:
      context: ./dev
      dockerfile: DockerfileApp
    image: e2eencloud/app
    container_name: app
    command: sleep infinity
    environment:
      - DATABASE_URL=prisma://db-prisma-proxy-https?api_key=HOGE_HOGE
      - DATABASE_URL_LOCAL=mysql://${DB_USER}:${DB_PASS}@db:3306/${DB_NAME}?schema=public
    volumes:
      - volume-appcache:/home/vscode/.cache
  rproxy:
    image: traefik:v2.9.6
    container_name: rproxy
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./dev/rproxy/conf:/etc/traefik:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
volumes:
  volume-mysql:
  volume-minio:
  volume-mailer:
  volume-appcache:

networks:
  network_cockroachdb:
    driver: bridge
